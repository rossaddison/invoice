   1) /home/runner/work/invoice/invoice/resources/views/invoice/invitem/_item_edit_product.php (method_argument_space, array_indentation, statement_indentation)
      ---------- begin diff ----------
--- /home/runner/work/invoice/invoice/resources/views/invoice/invitem/_item_edit_product.php
+++ /home/runner/work/invoice/invoice/resources/views/invoice/invitem/_item_edit_product.php
@@ -179,7 +179,7 @@
                         <?= Html::openTag('td', ['class' => 'td td-vert-middle']); ?>
                             <?= Html::openTag('div', ['class' => 'input-group']); ?>
                                 <?php
-                                       $optionsDataTaxRate = [];
+                                      $optionsDataTaxRate = [];
 /**
  * @var App\Invoice\Entity\TaxRate $taxRate
  */

      ----------- end diff -----------

   2) /home/runner/work/invoice/invoice/resources/views/invoice/generatorrelation/index.php (method_argument_space, statement_indentation)
      ---------- begin diff ----------
--- /home/runner/work/invoice/invoice/resources/views/invoice/generatorrelation/index.php
+++ /home/runner/work/invoice/invoice/resources/views/invoice/generatorrelation/index.php
@@ -63,55 +63,55 @@
     <?= Html::openTag('div'); ?>
 
 <?php
-                                                                            $columns = [
-                                                                                new DataColumn(
-                                                                                    'id',
-                                                                                    header: $translator->translate('id'),
-                                                                                    content: static fn(GentorRelation $model) => Html::encode($model->getRelation_id()),
-                                                                                ),
-                                                                                new DataColumn(
-                                                                                    'lowercasename',
-                                                                                    header: $translator->translate('generator.relation.form.lowercase.name'),
-                                                                                    content: static fn(GentorRelation $model) => Html::encode($model->getLowercase_name()),
-                                                                                ),
-                                                                                new DataColumn(
-                                                                                    'camelcasename',
-                                                                                    header: $translator->translate('generator.relation.form.camelcase.name'),
-                                                                                    content: static fn(GentorRelation $model) => Html::encode($model->getCamelcase_name()),
-                                                                                ),
-                                                                                new ActionColumn(buttons: [
-                                                                                    new ActionButton(
-                                                                                        content: '🔎',
-                                                                                        url: static function (GentorRelation $model) use ($urlGenerator): string {
-                                                                                            return $urlGenerator->generate('generatorrelation/view', ['id' => $model->getRelation_id()]);
-                                                                                        },
-                                                                                        attributes: [
-                                                                                            'data-bs-toggle' => 'tooltip',
-                                                                                            'title' => $translator->translate('view'),
-                                                                                        ],
-                                                                                    ),
-                                                                                    new ActionButton(
-                                                                                        content: '✎',
-                                                                                        url: static function (GentorRelation $model) use ($urlGenerator): string {
-                                                                                            return $urlGenerator->generate('generatorrelation/edit', ['id' => $model->getRelation_id()]);
-                                                                                        },
-                                                                                        attributes: [
-                                                                                            'data-bs-toggle' => 'tooltip',
-                                                                                            'title' => $translator->translate('edit'),
-                                                                                        ],
-                                                                                    ),
-                                                                                    new ActionButton(
-                                                                                        content: '❌',
-                                                                                        url: static function (GentorRelation $model) use ($urlGenerator): string {
-                                                                                            return $urlGenerator->generate('generatorrelation/delete', ['id' => $model->getRelation_id()]);
-                                                                                        },
-                                                                                        attributes: [
-                                                                                            'title' => $translator->translate('delete'),
-                                                                                            'onclick' => "return confirm(" . "'" . $translator->translate('delete.record.warning') . "');",
-                                                                                        ],
-                                                                                    ),
-                                                                                ]),
-                                                                            ];
+                                                                                        $columns = [
+                                                                                            new DataColumn(
+                                                                                                'id',
+                                                                                                header: $translator->translate('id'),
+                                                                                                content: static fn(GentorRelation $model) => Html::encode($model->getRelation_id()),
+                                                                                            ),
+                                                                                            new DataColumn(
+                                                                                                'lowercasename',
+                                                                                                header: $translator->translate('generator.relation.form.lowercase.name'),
+                                                                                                content: static fn(GentorRelation $model) => Html::encode($model->getLowercase_name()),
+                                                                                            ),
+                                                                                            new DataColumn(
+                                                                                                'camelcasename',
+                                                                                                header: $translator->translate('generator.relation.form.camelcase.name'),
+                                                                                                content: static fn(GentorRelation $model) => Html::encode($model->getCamelcase_name()),
+                                                                                            ),
+                                                                                            new ActionColumn(buttons: [
+                                                                                                new ActionButton(
+                                                                                                    content: '🔎',
+                                                                                                    url: static function (GentorRelation $model) use ($urlGenerator): string {
+                                                                                                        return $urlGenerator->generate('generatorrelation/view', ['id' => $model->getRelation_id()]);
+                                                                                                    },
+                                                                                                    attributes: [
+                                                                                                        'data-bs-toggle' => 'tooltip',
+                                                                                                        'title' => $translator->translate('view'),
+                                                                                                    ],
+                                                                                                ),
+                                                                                                new ActionButton(
+                                                                                                    content: '✎',
+                                                                                                    url: static function (GentorRelation $model) use ($urlGenerator): string {
+                                                                                                        return $urlGenerator->generate('generatorrelation/edit', ['id' => $model->getRelation_id()]);
+                                                                                                    },
+                                                                                                    attributes: [
+                                                                                                        'data-bs-toggle' => 'tooltip',
+                                                                                                        'title' => $translator->translate('edit'),
+                                                                                                    ],
+                                                                                                ),
+                                                                                                new ActionButton(
+                                                                                                    content: '❌',
+                                                                                                    url: static function (GentorRelation $model) use ($urlGenerator): string {
+                                                                                                        return $urlGenerator->generate('generatorrelation/delete', ['id' => $model->getRelation_id()]);
+                                                                                                    },
+                                                                                                    attributes: [
+                                                                                                        'title' => $translator->translate('delete'),
+                                                                                                        'onclick' => "return confirm(" . "'" . $translator->translate('delete.record.warning') . "');",
+                                                                                                    ],
+                                                                                                ),
+                                                                                            ]),
+                                                                                        ];
 ?>
 <?php
 $toolbarString =

      ----------- end diff -----------

   3) /home/runner/work/invoice/invoice/resources/views/invoice/del/_view.php (method_argument_space, statement_indentation)
      ---------- begin diff ----------
--- /home/runner/work/invoice/invoice/resources/views/invoice/del/_view.php
+++ /home/runner/work/invoice/invoice/resources/views/invoice/del/_view.php
@@ -149,12 +149,12 @@
                     ['style' => 'text-decoration:none'],
                 ); ?>
                 <?= Field::text($form, 'global_location_number')
-                                                                                                    ->label($translator->translate('delivery.location.global.location.number'))
-                                                                                                    ->addInputAttributes([
-                                                                                                        'placeholder' => $translator->translate('delivery.location.global.location.number'),
-                                                                                                        'disabled' => 'disabled',
-                                                                                                        'value' => Html::encode($form->getGlobal_location_number() ?? ''),
-                                                                                                    ]);
+                                                                                                                    ->label($translator->translate('delivery.location.global.location.number'))
+                                                                                                                    ->addInputAttributes([
+                                                                                                                        'placeholder' => $translator->translate('delivery.location.global.location.number'),
+                                                                                                                        'disabled' => 'disabled',
+                                                                                                                        'value' => Html::encode($form->getGlobal_location_number() ?? ''),
+                                                                                                                    ]);
 ?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>

      ----------- end diff -----------

   4) /home/runner/work/invoice/invoice/resources/views/invoice/del/_form.php (statement_indentation)
      ---------- begin diff ----------
--- /home/runner/work/invoice/invoice/resources/views/invoice/del/_form.php
+++ /home/runner/work/invoice/invoice/resources/views/invoice/del/_form.php
@@ -49,106 +49,106 @@
                     ->header($translator->translate('error.summary'))
                     // all properties
                     ->onlyCommonErrors()
-                ?>
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'date_created')
-                    ->label($translator->translate('common.date.created'))
-                    ->value(Html::encode(($form->getDate_created())->format('Y-m-d')))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('common.date.created'),
-                        'readonly' => 'readonly',
-                    ])
-                ?>
+    ->label($translator->translate('common.date.created'))
+    ->value(Html::encode(($form->getDate_created())->format('Y-m-d')))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('common.date.created'),
+        'readonly' => 'readonly',
+    ])
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'date_modified')
-                    ->label($translator->translate('common.date.modified'))
-                    ->value(Html::encode(($form->getDate_modified())->format('Y-m-d')))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('common.date.modified'),
-                        'readonly' => 'readonly',
-                    ])
-                ?>
+    ->label($translator->translate('common.date.modified'))
+    ->value(Html::encode(($form->getDate_modified())->format('Y-m-d')))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('common.date.modified'),
+        'readonly' => 'readonly',
+    ])
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'name')
-                    ->label($translator->translate('name'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('name'),
-                    ])
-                    ->value(Html::encode($form->getName() ?? ''))
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('name'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('name'),
+    ])
+    ->value(Html::encode($form->getName() ?? ''))
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'building_number')
-                    ->label($translator->translate('delivery.location.building.number'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('delivery.location.building.number'),
-                    ])
-                    ->value(Html::encode($form->getBuildingNumber() ?? ''))
-                ?>
+    ->label($translator->translate('delivery.location.building.number'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('delivery.location.building.number'),
+    ])
+    ->value(Html::encode($form->getBuildingNumber() ?? ''))
+?>
             <?= Html::closeTag('div'); ?>    
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'address_1')
-                    ->label($translator->translate('street.address'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('street.address'),
-                    ])
-                    ->value(Html::encode($form->getAddress_1() ?? ''))
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('street.address'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('street.address'),
+    ])
+    ->value(Html::encode($form->getAddress_1() ?? ''))
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'address_2')
-                    ->label($translator->translate('street.address.2'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('street.address.2'),
-                        'value' => Html::encode($form->getAddress_2() ?? ''),
-                    ])
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('street.address.2'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('street.address.2'),
+        'value' => Html::encode($form->getAddress_2() ?? ''),
+    ])
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'city')
-                    ->label($translator->translate('city'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('city'),
-                        'value' => Html::encode($form->getCity() ?? ''),
-                    ])
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('city'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('city'),
+        'value' => Html::encode($form->getCity() ?? ''),
+    ])
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'state')
-                    ->label($translator->translate('state'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('state'),
-                        'value' => Html::encode($form->getState() ?? ''),
-                    ])
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('state'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('state'),
+        'value' => Html::encode($form->getState() ?? ''),
+    ])
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'zip')
-                    ->label($translator->translate('zip'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('zip'),
-                        'value' => Html::encode($form->getZip() ?? ''),
-                    ])
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('zip'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('zip'),
+        'value' => Html::encode($form->getZip() ?? ''),
+    ])
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Field::text($form, 'country')
-                    ->label($translator->translate('country'))
-                    ->addInputAttributes([
-                        'placeholder' => $translator->translate('country'),
-                    ])
-                    ->value(Html::encode($form->getCountry() ?? ''))
-                    ->hint($translator->translate('hint.this.field.is.required'));
-                ?>
+    ->label($translator->translate('country'))
+    ->addInputAttributes([
+        'placeholder' => $translator->translate('country'),
+    ])
+    ->value(Html::encode($form->getCountry() ?? ''))
+    ->hint($translator->translate('hint.this.field.is.required'));
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?= Html::a(
@@ -162,27 +162,27 @@
                         'placeholder' => $translator->translate('delivery.location.global.location.number'),
                         'value' => Html::encode($form->getGlobal_location_number() ?? ''),
                     ])                                                                                 ->hint($translator->translate('hint.this.field.is.not.required'));
-                ?>
+?>
             <?= Html::closeTag('div'); ?>
             <?= Html::openTag('div'); ?>
                 <?php
-                $optionsDataEAS = [];
-                /**
-                 * @see src/Invoice/Helpers/Peppol/PeppolArrays.php function electronic_address_scheme
-                 * @see https://docs.peppol.eu/poacc/billing/3.0/syntax/ubl-invoice/cac-Delivery/cac-DeliveryLocation/cbc-ID/
-                 * @var int $key
-                 * @var array $value
-                 */
-                foreach ($electronic_address_scheme as $key => $value) {
-                    $optionsDataEAS[(string) $value['code']] = (string) $value['code'] . str_repeat("-", 10) . (string) $value['description'];
-                }
-                ?>
+$optionsDataEAS = [];
+/**
+ * @see src/Invoice/Helpers/Peppol/PeppolArrays.php function electronic_address_scheme
+ * @see https://docs.peppol.eu/poacc/billing/3.0/syntax/ubl-invoice/cac-Delivery/cac-DeliveryLocation/cbc-ID/
+ * @var int $key
+ * @var array $value
+ */
+foreach ($electronic_address_scheme as $key => $value) {
+    $optionsDataEAS[(string) $value['code']] = (string) $value['code'] . str_repeat("-", 10) . (string) $value['description'];
+}
+?>
                 <?= Html::a('EAS', 'https://docs.peppol.eu/poacc/upgrade-3/codelist/eas'); ?>
                 <?= Field::select($form, 'electronic_address_scheme')
-                    ->label($translator->translate('delivery.location.electronic.address.scheme'))
-                    ->optionsData($optionsDataEAS)
-                    ->hint($translator->translate('hint.this.field.is.not.required'));
-                ?>
+    ->label($translator->translate('delivery.location.electronic.address.scheme'))
+    ->optionsData($optionsDataEAS)
+    ->hint($translator->translate('hint.this.field.is.not.required'));
+?>
             <?= Html::closeTag('div'); ?>
         <?= Html::closeTag('div'); ?>
     <?= Html::closeTag('div'); ?>

      ----------- end diff -----------


Found 4 of 988 files that can be fixed in 14.330 seconds, 34.00 MB memory used
